{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Regular;\f4\froman\fcharset0 Times-Roman;\f5\fnil\fcharset0 Menlo-Italic;
}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red122\green200\blue182;\red107\green0\blue109;\red150\green134\blue245;\red108\green121\blue134;\red145\green212\blue98;
\red153\green232\blue213;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000;
\csgenericrgb\c47716\c78607\c71403;\cssrgb\c50196\c0\c50196;\csgenericrgb\c58752\c52717\c95948;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c56799\c83212\c38450;
\csgenericrgb\c59926\c90967\c83488;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 \
\

\f1\b0 \ul Any and AnyObject\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \ulnone Any and AnyObject are special types.\
These types used to be commonly used for compatibility with old Objective-C APIs\
But not so much anymore in iOS11 since those old Objective-C API's have been updated(though we did see it with NSAttributedString)\
\
\
AnyObject is exactly same as Any but is just for classes only and the object is the any of classes only.\
\
\
Any means, you dont know what type it is, it could be any type,Thats not very swifty thing as swift is strongly tight.\
So AnyObject and Any are just there for compatibility with Objc \
\
Variables of type Any can hold something of any type (AnyObject holds classes only)\
Swift is a strongly typed language, though so you cant invoke a method on an Any.\
One of the beauties of Swift is its strong typing , so generally avoid Any.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b \cf0 (***)Objective-C had a very important type called ID which was essentially any and it was built in to all of the API's.\
So when swift came along and tried to be strongly typed, it had to have this one concession. So we dont use Any in our own code, its for backward compatibility\
Variable of Any type can hold any type .(Structs,enums,classses,anything)\
The problem is though you cant send any messages to something of type Any, because you don't code know what it is.Swift under the covers might know what it is but since you have typed it Any its assuming you dont want to send any messages to it that you dont know what it is. So how do we deal with that case in Swift where we got the strongly type language we cant send a message to Any. \
//Well got to convert it.\
\
\

\f1\b0 \ul \
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 \ulnone {\listtext	\uc0\u8226 	}\ul Where will we see conversion of Any in iOS???\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b \cf0 \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b0 \cf0 NSAttributedString.\
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f2\b \cf2 \cb3 let
\f3\b0 \cf4  attributes : [\cf5 \cb3 NSAttributedString\cf4 \cb3 .\cf5 \cb3 Key\cf4 \cb3 :
\f2\b \cf2 Any
\f3\b0 \cf4 ] = [.\cf5 \cb3 strokeColor\cf4 \cb3 : colorLiteral(red: 1, green: 0.6109774504, blue: 0.1809700295, alpha: 1)]\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1 \cf0 \cb1 \
The attributes of NSAttributedString can be different things (UIColor,UIFont,etc.)\
So the type Any was used as the type of the values in the attributes Dictionary\
\
\
\
\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	\uc0\u8226 	}\ul Sometimes (rarely) Any will be the type of a function's argument.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \ulnone Here's a UIViewController method that includes a sender (which can of any type)\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f2\b \cf2 \cb3 func
\f3\b0 \cf4  prepare(for segue : \cf5 \cb3 UIStoryboardSegue\cf4 \cb3 ,sender : 
\f2\b \cf2 Any
\f3\b0 \cf4 ?)
\f0\b \cf0 \cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
The sender is the thing that caused this "segue"(i.e. , a move to another MVC) to occur\
The sender might be a UIButton or a UITableViewCell or some custom thing in your code.(so nil)\
It's an Optional because it's okay for a segue to happen without a sender being specified.\
\
\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\pardirnatural\partightenfactor0
\ls3\ilvl0
\f1\b0 \cf0 {\listtext	\uc0\u8226 	}\ul Dont use Any in your project
\f0\b \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
You can , of course call iOS API that uses it.\
But dont use it for any of your own internal data structure work\
\
\
\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\pardirnatural\partightenfactor0
\ls4\ilvl0\cf0 {\listtext	\uc0\u8226 	}How do we use a variable of type Any?\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
We cant directly use it (since we dont know what type it really is)\
Instead we must convert it to another known type.\
\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b0 \cf6 \expnd0\expndtw0\kerning0
(***)Conversion is done with the "as?" keyword in Swift  (tries to convert that Any to specific type you mention but if cant convert it returns nil)\
This conversion might not be possible , so the conversion generates an Optional.\
You can also check to see if something can be converted with the "is" keyword (true/false )\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b \cf0 \kerning1\expnd0\expndtw0 We almost always use as? it with if let ...\
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f2 \cf2 \cb3 let
\f3\b0 \cf4  unknown : 
\f2\b \cf2 Any
\f3\b0 \cf4  = \cf7 5\cf4  
\f5\i \cf8 //we cant send unknown a messaage because its"typeless"
\f3\i0 \cf4 \
\

\f5\i \cf8 //unknown. //nothing avaiable
\f3\i0 \cf4 \
\

\f5\i \cf8 //if let foo = unknown as? MyType\{
\f3\i0 \cf4 \

\f5\i \cf8 //let MyType be Int
\f3\i0 \cf4 \

\f2\b \cf2 if
\f3\b0 \cf4  
\f2\b \cf2 let
\f3\b0 \cf4  foo = \cf9 unknown\cf4  
\f2\b \cf2 as
\f3\b0 \cf4 ? \cf5 Int\cf4 \{\
    
\f5\i \cf8 //foo is of type MyType(Int) in here
\f3\i0 \cf4 \
    
\f5\i \cf8 // so we can invoke MyType methods or access MyType vars in foo
\f3\i0 \cf4 \
    
\f5\i \cf8 //if unknown was not of type MyType,then we will never get here
\f3\i0 \cf4 \
    \cf10 print\cf4 (foo.\cf10 distance\cf4 (to: \cf7 1\cf4 ))\
\}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b \cf0 \cb1 \
\
\
}